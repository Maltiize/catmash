{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_services/cat.service.ts","./src/app/_services/message.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/vote-img/vote-img.component.html","./src/app/vote-img/vote-img.component.ts","./src/app/vote/vote.component.html","./src/app/vote/vote.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { environment } from \"../../environments/environment\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { Cat } from \"../_models/cat\";\nimport { MessageService } from \"./message.service\";\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatService {\n\n  private urlCat = environment.url_api + environment.url_cat;  // URL to web api\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) { }\n\n  getCats(): Observable<Cat[]> {\n    return this.http.get<Cat[]>(this.urlCat)\n      .pipe(\n        tap(_ => ''),\n      );\n  }\n\n  getCat(id: number): Observable<Cat> {\n    const url = `${this.urlCat}/${id}`;\n    return this.http.get<Cat>(url).pipe(\n      tap(_ => ''),\n    );\n  }\n\n  \n  getCatMatchup(unusedId:number = null): Observable<Cat[]> {\n    const url =  `${this.urlCat}/matchup`;\n\n    return this.http.get<Cat[]>(url).pipe(\n      tap(_ => ''),\n    );\n  }\n\n  postMatchupVote(idWinner: number,idLoser: number): Observable<Cat[]> {\n    const url = `${this.urlCat}/matchup/vote`;\n    return this.http.post<Cat[]>(url,{winner:idWinner,loser:idLoser}).pipe(\n      tap(_ => ''),\n    );\n  }\n\n\n  /**\n    * Handle Http operation that failed.\n    * Let the app continue.\n    * @param operation - name of the operation that failed\n    * @param result - optional value to return as the observable result\n    */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error); // log to console instead\n      this.log(`${operation} erreur: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n      \n    };\n  }\n  /** Log a MEDDService message with the MessageService */\n  private log(message: string) {\n\n    this.messageService.add(`AMRService: ${message}`);\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MessageService {\n    messages: string[] = [];\n\n    add(message: string) {\n        this.messages.push(message);\n    }\n\n    clear() {\n        this.messages = [];\n    }\n}","<!--The content below is only a placeholder and can be replaced.-->\n\n  <app-vote></app-vote>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'; \n\nimport { AppComponent } from './app.component';\nimport { VoteImgComponent } from './vote-img/vote-img.component';\nimport { VoteComponent } from './vote/vote.component';\nimport { VoteCountComponent } from './vote-count/vote-count.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VoteImgComponent,\n    VoteComponent,\n    VoteCountComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div (click)=\"voteEmitter()\" class=\"cardbox shadow-lg bg-white\">\n\n  <div class=\"cardbox-heading\">\n   \n    <!--/ dropdown -->\n    <div class=\" card-headion-title\">\n    {{ cat.name | uppercase  }}\n    </div>\n    <!--/ media -->\n  </div>\n  <!--/ cardbox-heading -->\n\n  <div class=\"cardbox-item\">\n    <img class=\"img-fluid center\" [src]=\"cat.url\" alt=\"Image\">\n  </div>\n  <!--/ cardbox-item -->\n  <div class=\"cardbox-base\">\n    \n\n\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport { Cat } from \"../_models/cat\";\n\n@Component({\n  selector: 'app-vote-img',\n  templateUrl: './vote-img.component.html',\n  styleUrls: ['./vote-img.component.css']\n})\nexport class VoteImgComponent implements OnInit {\n\n  @Input('cat') cat: Cat;\n  @Output() vote: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    this.cat = null ;\n  }\n\n  voteEmitter(){\n    this.vote.emit(this.cat.id);\n  }\n\n}\n","<section class=\"hero\">\n  <div class=\"container\">\n    <div class=\"row\">\n\n      <div class=\"col-4 offset-1\">\n        <app-vote-img [cat]=\"catA\" (vote)=\"onVote($event)\"></app-vote-img>\n      </div>\n\n      <div id=\"versus-circle\" class=\"col-2\">\n\n        <p>\n            VS\n        </p>\n\n      </div>\n\n      <div class=\"col-4 \">\n        <app-vote-img [cat]=\"catB\" (vote)=\"onVote($event)\" ></app-vote-img>\n      </div>\n    \n    </div>\n  </div>\n</section>\n","import { Cat } from \"../_models/cat\";\n\nimport { Component, OnInit } from '@angular/core';\nimport { CatService } from '../_services/cat.service';\n\n\n@Component({\n  selector: 'app-vote',\n  templateUrl: './vote.component.html',\n  styleUrls: ['./vote.component.css']\n})\nexport class VoteComponent implements OnInit {\n\n  public catA: Cat;\n  public catB: Cat;\n\n\n  constructor(private catservice: CatService) { }\n\n  ngOnInit() {\n    this.catservice.getCatMatchup().subscribe((data) => {\n      this.catA = data[0];\n      this.catB = data[1];\n      console.log(data);\n    });\n  }\n\n  onVote(event) {\n\n    let loser = event === this.catA.id ? this.catB.id : this.catB.id;\n\n    this.catservice.postMatchupVote(event, loser).subscribe((data) => {\n\n      if (data[0].id === this.catA.id)\n        this.catB = data[1];\n      else\n        this.catA = data[1];\n\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url_api: 'http://127.0.0.1:8000/api/',\n  url_cat: 'cat',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}